{{format-markdown "
## Testing

### Integration Testing

Since integration tests do not run initializers, you'll need to manually run the `ember-keyboard` initializer before each test:

```js
import { initialize } from 'ember-keyboard';

moduleForComponent('my component', 'Integration | Component | my component', {
  integration: true,

  beforeEach() {
    initialize();
  }
});
```

### Trigger Key Events

If you need to manually trigger a key event (such as in a component integration test), you can use `triggerKeyDown`, `triggerKeyPress`, and `triggerKeyUp`. By default, the event triggers on the `document`, but you can optionally provide a DOM element as the second argument:

```js
import { triggerKeyDown, triggerKeyPress, triggerKeyUp } from 'ember-keyboard';

. . . .

test('test my key bindings', function(assert) {
  triggerKeyDown('KeyA'); // triggers on `document`
  triggerKeyUp('KeyA+shift+cmd', document.getElementById('foo')); // triggers on `#foo`
});
```

### Async Acceptance Test Helpers

`ember-keyboard` comes with some test helpers to help out with your acceptance tests.

```js
import { keyDown, keyUp, keyPress } from 'ember-keyboard/test-support/test-helpers';
. . . .

test('test my key bindings', function(assert) {
  . . . .
  await keyUp('ArrowRight'); // triggers on document
  await keyDown('ArrowRight+ctrl+shift', document.getElementById('foo')); // triggers on `#foo`
  . . . .
});
```
"}}
